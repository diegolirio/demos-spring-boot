version: '3.1'

#xkongconfig: &kong-env
#  KONG_DATABASE: postgres
#  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
#  KONG_PG_HOST: kong-database
#  KONG_PG_USER: ${POSTGRES_USER:-kong}
#  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password

services:
  kong-migrations:
    image: kong/kong-gateway:3.3.1.0
    command: kong migrations bootstrap
    container_name: kong_migrations
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${POSTGRES_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: kong/kong-gateway:3.3.1.0
    command: kong migrations up && kong migrations finish
    container_name: kong_migrations_up
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${POSTGRES_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-gateway:
    image: kong/kong-gateway:3.3.1.0
    user: "${KONG_USER:-kong}"
    container_name: kong_gateway
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${POSTGRES_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:${KONG_ADMIN_PORT:-8001}
      KONG_PROXY_LISTEN: 0.0.0.0:${KONG_PROXY_PORT:-8000}
    secrets:
      - kong_postgres_password
    ports:
      - '${KONG_PROXY_PORT:-8000}:8000'
      - '${KONG_ADMIN_PORT:-8001}:8001'
    depends_on:
      - kong-database
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  kong-database:
    image: postgres:13
    container_name: kong_db
    environment:
      - POSTGRES_DB=${KONG_PG_DATABASE:-kong}
      - POSTGRES_USER=${POSTGRES_USER:-kong}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-kongpass}
    networks:
      - kong-net

networks:
  kong-net:
    #docker external: true

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
